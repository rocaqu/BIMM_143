---
title: "Class 08: Machine Learning"
author: "Rogelio Castro"
format: pdf
editor: visual
---

## Breast Cancer Project
Today we are going to explore some data from the University of Wisconsin Cancer Center on Breast biopsy data.

```{r}
wisc.data <- read.csv("WisconsinCancer.csv", row.names = 1)
head(wisc.data)
```


>How many patient samples are in this data set?

```{r}
nrow(wisc.data)
```

There are `r nrow(wisc.data)` patients in this dataset.

>Q. How many cancer (M) and non-cancer (b) samples are there?

```{r}
table(wisc.data$diagnosis)
```

Save the diagnosis for later use as a reference to compare how well we do with PCA etc.


```{r}
diagnosis <- as.factor(wisc.data$diagnosis)
#diagnosis
```


Now exclude the diagnosis column from the data

```{r}
wisc <- wisc.data[,-1]
wisc
```


>Q. How many "dimensions", "variables", "columns" are there in this dataset?

```{r}
ncol(wisc)
```

# Principal Component Analysis (PCA)

To perform PCA in R we can use the `prcomp()` function. It takes as input a numeric dataset and optional `scale=FALSE/TRUE` argument.

We generally always awnt to set `scale=TRUE` but let's make sure by checking if the mean and standard deviation are values are different across these 30 columns.


```{r}
round( colMeans(wisc) )
```


```{r}
pca <- prcomp(wisc, scale=TRUE)
summary(pca)
```

```{r}
attributes(pca)
```
```{r}
plot(pca$x[,1], pca$x[,2], col=diagnosis)
```


```{r}
library(ggplot2)

x <- as.data.frame(pca$x)


ggplot(x) +
  aes(PC1, PC2, col=diagnosis) +
  geom_point()
```


> Q. How much varuance is captured in the top 3 PCs?

They capure 76% of the total variance.

> Q9. For the first principal component, what is the component of the loading vectorr (i.e.wisc.pr$rotation[,1]) for the feature concave.points_mean? 

```{r}
pca$rotation["concave.points_mean", 1]
```

```{r}
attributes(pca)
```

# Combine PCA results wiht clustering.

We can use ourn new PCA variables (i.e. the scores along the pCs contained in t `pca$x`) as input for other methods such as clustering.

```{r}
# Hclust needs a distance matrix as input
d <- dist( pca$x[,1:3] )

hc <- hclust(d, method="ward.D2")
plot(hc)
```


To get our cluster membership vectir we can use the `cutree()` function and specify a height (`h`) or number of groups (`k`)

```{r}
grps <- cutree(hc, h=80)
table(grps)
```


I want to find out how many diagnosis "M" and "B" are in each group?

```{r}
table(diagnosis)
```


```{r}
table(diagnosis, grps)
```

We can aslo plot our result using our clustering vector `grps`.

```{r}
plot(pca$x[,1], pca$x[,2], col=grps)
```


```{r}
ggplot(x) +
  aes( PC1, PC2)+
  geom_point( col=grps)
```



> Q15. What is the specificity and sensitivity of our current results?

```{r}
# group 1 is mostly malignant while group 2 is mostly benign
# sensitivity = TP / (TP + FN)
sensitivity <- 179 / (179 + 24) # specificity = TN / (TN + FN)
specificity <- 333 / (333 + 24)
print(sensitivity)
```




# Prediction

```{r}
#url <- "new_samples.csv"
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(pca, newdata=new)
npc
```


