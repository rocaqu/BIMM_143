---
title: "Class 11: Halloween Project"
author: "Rogelio Castro"
format: pdf
editor: visual
---


In today's class we will examine 558 candy data and see if this helps us__ some more feeling for how PCA and others methods work.


```{r}
candy <- read.csv ("candy-data.txt", row.names=1)
head(candy)
```
>Q1. How many different candy types are in this dataset?

```{r}
nrow(candy)
```

>Q2. How many fruity candy types are in the data set?

```{r}
sum(candy$fruity)
```


Q. What are these fruity candy?

```{r}
rownames(candy[ candy$fruity == 1, ])
```


## How often does my favorite candy win?

>Q3. What is your favorite candy in the dataset and what is it’s winpercent value?

```{r}
candy ["Almond Joy",]$winpercent
```

>Q4. What is the winpercent value for “Kit Kat”?

```{r}
candy ["Kit Kat",]$winpercent
```


>Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

```{r}
candy ["Tootsie Roll Snack Bars",]$winpercent
```


```{r}
library("skimr")
skim(candy)
```

```{r}
skimr::skim(candy)
```



>Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

Yes, the `winpercent` column is on a 0:100 scale and all others appear to be 0:1 scale.

>Q7. What do you think a zero and one represent for the candy$chocolate column?

A zero here means the candy is not classified as containing chocolate.

```{r}
hist(candy$winpercent)
```


>Q8. Plot a histogram of winpercent values

```{r}
library(ggplot2)
ggplot(candy) +
  aes(winpercent) +
  geom_histogram(bins=10)
```


>Q9. Is the distribution of winpercent values symmetrical?

No

>Q10. Is the center of the distribution above or below 50%?

Below 50% with a mean:
```{r}
mean(candy$winpercent)
```


>Q11. On average is chocolate candy higher or lower ranked than fruit candy?

To answer this question I will need to "subset" (a.k.a. "select", "filter") the candy of the dataset to just chocolate candy;
-get their winpercent values
-calculate the mean of this

Then do the same for fruity candy and compare.

```{r}
#Filter/select/subset to just chocolate rows
chocolate.candy <- candy[as.logical(candy$chocolate), ]

#Get their winpercent values
chocolate.winpercent <- chocolate.candy$winpercent

#Calculate their mean winpercent value
mean(chocolate.winpercent)
```


```{r}
fruity.candy <- candy[as.logical(candy$fruity), ]
fruity.winpercent <- fruity.candy$winpercent
mean(fruity.winpercent)
```

>Q12. Is this difference statistically significant?

```{r}
t.test(chocolate.winpercent, fruity.winpercent)
```

## Overall Candy Rankings

There is a base R function called `sort()` for, guess what? sorting vectors of input.

```{r}
x <- c(5, 2, 10)

sort(x, decreasing = TRUE)
```

The buddy function to `sort()` that is ofetn more useful is called `order()`. It returns the "indices" of the input that qouls ewaulr in it being sorted.


```{r}
order(x)
x[ order(x) ]

```


>Q13. What are the five leaast liked candy types in this set?

I can order by `winpercent`

```{r}
ord <- order(candy$winpercent)
candy[ord,]
```

>Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
ord <- order(candy$winpercent, decreasing=TRUE)
head(candy[ord, ], 5 )
```


>Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
library(ggplot2)

ggplot(candy) + 
  aes(winpercent, rownames(candy)) +
  geom_col()
```

>Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?

```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy), winpercent)) +
  geom_col()
```

>Q. Recolor graph:

```{r}
my_cols=rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "pink"
```


```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col(fill=my_cols) 
```

>Q17. What is the worst ranked chocolate candy?

Sixlets

>Q18. What is the best ranked fruity candy?

Starburst


##Taking a look at precepercent

>Q. What is the bes candy for the least money?

```{r}
my_cols[as.logical(candy$fruity)] = "red"
```


```{r}
# How about a plot of price vs win
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols)
```

```{r}
# Adding labels
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) +
  geom_text()
```

To deal with overlapping labels I can use the **ggrepel** package.
```{r}
library(ggrepel)

# Eliminate overlapping labels
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) + 
  geom_text_repel(max.overlaps = 7, col=my_cols, size=3.3)
```


# 5 Exploring the correlation structure:

Pearson correlation goes between -1 and +1 with zero indicating no correlation and values close to one being very highly (ani) correlated.

```{r}
library(corrplot)

cij <- cor(candy)
corrplot(cij)
```

>Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

Chocolate and fruit are anti-correlated.

>Q23. Similarly, what two variables are most positively correlated?

Chocolate and winepercent or chocolare and bar.


## 6. Principal Component Analysis:

THe base R function for PCA is called `prcomp()` and we cans set "scale=TRUE/FALSE"

```{r}
pca <- prcomp(candy, scale=TRUE)
summary(pca)
```

The main result of PCA -i.e. the new PC plot (projection of candy on our new PC axis) is contained in `pca$x`.

```{r}
pc <-  as.data.frame(pca$x)

ggplot(pc) +
  aes(PC1,PC2, label=rownames(pc)) +
  geom_point(col=my_cols)
```


>Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

Fruity, hard and pluribus

```{r}
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
```












