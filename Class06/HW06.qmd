---
title: "class06HW"
author: "Rogelio Castro"
format: pdf
editor: visual
echo: TRUE
---

First we got to make sure that we install the necessary packages to be able to answer Q6.

```{r}
# Install the bio3d package
install.packages("bio3d")

```

```{r}
df <- data.frame(a=1:10, b=seq(200,400,length=10),c=11:20,d=NA)
df$a <- (df$a - min(df$a)) / (max(df$a) - min(df$a))
df$b <- (df$b - min(df$a)) / (max(df$b) - min(df$b))
df$c <- (df$c - min(df$c)) / (max(df$c) - min(df$c))
df$d <- (df$d - min(df$d)) / (max(df$a) - min(df$d)) 

```

```{r}
# Can you improve this analysis code?
library(bio3d)
s1 <- read.pdb("4AKE") # kinase with drug
s2 <- read.pdb("1AKE") # kinase no drug
s3 <- read.pdb("1E4Y") # kinase with drug
s1.chainA <- trim.pdb(s1, chain="A", elety="CA")
s2.chainA <- trim.pdb(s2, chain="A", elety="CA")
s3.chainA <- trim.pdb(s1, chain="A", elety="CA")
s1.b <- s1.chainA$atom$b
s2.b <- s2.chainA$atom$b
s3.b <- s3.chainA$atom$b
plotb3(s1.b, sse=s1.chainA, typ="l", ylab="Bfactor")
plotb3(s2.b, sse=s2.chainA, typ="l", ylab="Bfactor")
plotb3(s3.b, sse=s3.chainA, typ="l", ylab="Bfactor")
```

# Now our version

```{r}
analyze_pdb <- function(pdb_analyze) {
c<- read.pdb(pdb_analyze)
c.chainA <- trim.pdb(s, chain="A", elety="CA")
c.b <- c.chainA$atom$b
plotb3(c.b, sse=c.chainA, typ="1", ylab="B-Factor")
```



```{r}
# Can you improve this analysis code?
library(bio3d)
# s1 <- read.pdb("4AKE") # kinase with drug
# s2 <- read.pdb("1AKE") # kinase no drug
# s3 <- read.pdb("1E4Y") # kinase with drug
# s1.chainA <- trim.pdb(s1, chain="A", elety="CA")
# s2.chainA <- trim.pdb(s2, chain="A", elety="CA")
# s3.chainA <- trim.pdb(s3, chain="A", elety="CA")
# s1.b <- s1.chainA$atom$b
# s2.b <- s2.chainA$atom$b
# s3.b <- s3.chainA$atom$b
# plotb3(s1.b, sse=s1.chainA, typ="l", ylab="Bfactor")
# plotb3(s2.b, sse=s2.chainA, typ="l", ylab="Bfactor")
# plotb3(s3.b, sse=s3.chainA, typ="l", ylab="Bfactor")

plotkinase <- function(input){
  #this function does so and so
  # input: pdb_id for a kinase
  # output: sdfgh
  s <- read.pdb(input)
  s.chainA <- trim.pdb(s, chain="A", elety="CA")
  s.b <- s.chainA$atom$b
  plotb3(s.b, sse=s1.chainA, typ="l", ylab="Bfactor")
}

plotkinase("4AKE")


# # squarednumber <- function(number){
# #   return(number*number)
# # }
# 
# # squarednumber(5)


```
