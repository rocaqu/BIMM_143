---
title: "RNA-Seq analysis mini-project"
author: "Rogelio Castro"
format: pdf
editor: visual
---

# Section 1: 

```{r}
#| message: false
library(DESeq2)
```

```{r}
metaFile <- "GSE37704_metadata.csv"
countFile <- "GSE37704_featurecounts.csv"
```

```{r}
colData = read.csv(metaFile, row.names = 1)
head(colData)
```

```{r}
countData = read.csv(countFile, row.names=1)
head(countData)
```

>Q1. Complete the code below to remove the troublesome first column from countData

```{r}
# Note we need to remove the odd first $length col
countData <- as.matrix(countData[,-1])
head(countData)

```

>Q2. Complete the code below to filter countData to exclude genes (i.e. rows) where we have 0 read count across all samples (i.e. columns).
Tip: What will rowSums() of countData return and how could you use it in this context?


```{r}
zerocounts <- rowSums(countData) == 0
head(zerocounts)
```


```{r}
newcounts <- countData[!zerocounts, ]
head(newcounts)
```

```{r}
nrow(newcounts)
```

## 3. Setup and run DESeq:

Already loaded `DESeq2` at the begining of the project

```{r}
dds <- DESeqDataSetFromMatrix(countData = newcounts,
                       colData = colData,
                       design = ~condition)
```

```{r}
dds <- DESeq(dds)
```

```{r}
res <- results(dds)
```

```{r}
res = results(dds, contrast=c("condition", "hoxa1_kd", "control_sirna"))
res
```
>Q. Call the summary() function on your results to get a sense of how many genes are up or down-regulated at the default 0.1 p-value cutoff.

```{r}
summary(res)
```


```{r}
plot( res$log2FoldChange, -log(res$padj) )
```


## 4. Annotate results:

I need to add annotation to my results including gene symvols and ENTREZ IDs etc. For this I will use the **AnnotationDbi** package.

```{r}
library(AnnotationDbi)
library("org.Hs.eg.db")

columns(org.Hs.eg.db)
```

```{r}
res$symbol = mapIds(org.Hs.eg.db,
                    keys=rownames(res), 
                    keytype="ENSEMBL",
                    column="SYMBOL",
                    multiVals="first")
```

```{r}
res$entrez = mapIds(org.Hs.eg.db,
                    keys=rownames(res), 
                    keytype="ENSEMBL",
                    column="ENTREZID",
                    multiVals="first")
```

```{r}
head(res)
```

>Q. Finally for this section let's reorder these results by adjusted p-value and save them to a CSV file in your current project directory.

```{r}
res = res[order(res$pvalue),]
write.csv(res, file = "deseq_results.csv")
```

```{r}
plot(res$log2FoldChange, -log(res$padj))
```





#Pathway Analysis:

```{r}
#| message: false
library(pathview)
library(gage)
library(gageData)
```

```{r}
data(kegg.sets.hs)
data(sigmet.idx.hs)

# Focus on signaling and metabolic pathways only
kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]
```


```{r}
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)
```


Run gage:
```{r}
# Get the results:
keggres = gage(foldchanges,gsets = kegg.sets.hs)

```

```{r}
head(keggres$less)
```

Look at the first few down (less) pathway


```{r}
pathview(gene.data = foldchanges, pathway.id = "hsa04110")
```

![](hsa04110.pathview.png)











